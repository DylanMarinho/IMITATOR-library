(*******************************************************************************
 *                                IMITATOR MODEL                               
 * 
 * Title            : KSA22_4
 * Description      : model from "Protecting Smart Homes from Unintended Application Actions"
 * Correctness      : TODO
 * Scalable         : no
 * Generated        : no
 * Categories       : Security
 * Source           : "Protecting Smart Homes from Unintended Application Actions" (ICCPS 2022) (10.1109/ICCPS54341.2022.00031)
 * bibkey           : KSA22
 * Author           : Aqsa Kashaf, Vyas Sekar, Yuvraj Agarwal
 * Modeling         : Aqsa Kashaf, Vyas Sekar, Yuvraj Agarwal
 * Input by         : Aqsa Kashaf, Vyas Sekar, Yuvraj Agarwal, Dylan Marinho
 * License          : Creative Commons Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)
 * 
 * Created          : <2022/08
 * Last modified    : 2023/05/11
 * Model version    : 1.1
 * 
 * IMITATOR version : 3.4
 ******************************************************************************)

(* The default output should be  True. The observer model checks if garage door is closed with delta time after being opened *)

var
	(* Clocks *)
	switch_switch_1_sensor_clk,
	timer_switch_switch_1,
	clock_GarageDoorOpener_0,
	app_clk,
		:clock;

	app,
	switch_switch_1,
	delta,
	trigger_GarageDoorOpener,
	delay,
		:discrete;

(* check if app has been tapped*)
(************************************************************)
	automaton app_Env
(************************************************************)
	actions: app_Evt;

	loc mode0: invariant True
		when app_clk > 0 sync app_Evt do {app:=0, app_clk:=0} goto mode0;
		when app_clk > 0 sync app_Evt do {app:=1, app_clk:=0} goto mode0;

	end

(*  device model for garage switch *)
(************************************************************)
	automaton switch_switch_Dev_1
(************************************************************)
	actions: switch_switch_1_GarageDoorOpener0_0, switch_switch_Evt_1;

	loc mode0: invariant True
		when switch_switch_1_sensor_clk > 0 sync switch_switch_Evt_1 do {switch_switch_1:=96,switch_switch_1_sensor_clk:=0} goto mode1;
		when switch_switch_1_sensor_clk > 0 sync switch_switch_Evt_1 do {switch_switch_1:=97,switch_switch_1_sensor_clk:=0} goto mode1;

	loc mode1: invariant True
		when True sync switch_switch_1_GarageDoorOpener0_0 do {} goto mode2;

	urgent loc mode2: invariant True
		when True sync switch_switch_Evt_1 do {} goto mode1;

	end

(* garage door opener app *)
(************************************************************)
	automaton GarageDoorOpener0
(************************************************************)
	actions: app_Evt, switch_switch_1_GarageDoorOpener0_0;

	loc mode0: invariant True
		when True sync app_Evt do {} goto mode1;

	urgent loc mode1: invariant True
		when app > 0 sync switch_switch_1_GarageDoorOpener0_0 do {switch_switch_1:=97} goto mode0;
		when app <= 0 do {} goto mode0;

	end

(* garage door opener app *)
(************************************************************)
	automaton automata_delay_18_2_sync
(************************************************************)
	actions: delay_18_2_sync, switch_switch_1_automata_delay_18_2_sync_0;

	loc mode0: invariant True
		when True sync delay_18_2_sync do {clock_GarageDoorOpener_0:=0} goto mode1;

	loc mode1: invariant clock_GarageDoorOpener_0 <= delay
		when clock_GarageDoorOpener_0 >= delay sync switch_switch_1_automata_delay_18_2_sync_0 do {switch_switch_1:=96, trigger_GarageDoorOpener:=0} goto mode0;

	end

(* garage door opener app *)
(************************************************************)
	automaton GarageDoorOpener1
(************************************************************)
	actions: switch_switch_Evt_1, delay_18_2_sync;

	loc mode0: invariant True
		when True sync switch_switch_Evt_1 do {} goto mode1;

	urgent loc mode1: invariant True
		when switch_switch_1 = 97 do {} goto mode2;
		when switch_switch_1 < 97 do {} goto mode0;
		when switch_switch_1 > 97 do {} goto mode0;

	urgent loc mode2: invariant True
		when trigger_GarageDoorOpener=0 sync delay_18_2_sync do {trigger_GarageDoorOpener:=1} goto mode0;
		when trigger_GarageDoorOpener=1 do {} goto mode0;

	end

(************************************************************)
	automaton switch_on_deadline_switch
(************************************************************)
	actions: switch_switch_Evt_1, switch_switch_1_automata_delay_18_2_sync_0, switch_switch_1_GarageDoorOpener0_0, badstate;

	loc mode0: invariant True
		when True sync switch_switch_1_automata_delay_18_2_sync_0 do {} goto mode1;
		when True sync switch_switch_1_GarageDoorOpener0_0 do {} goto mode1;
		when True sync switch_switch_Evt_1 goto mode1;

	urgent loc mode1: invariant True
		when switch_switch_1 = 97  do {timer_switch_switch_1:=0} goto mode2;
		when switch_switch_1 < 97  do {} goto mode0;
		when switch_switch_1 > 97  do {} goto mode0;

	loc mode2: invariant True
		when timer_switch_switch_1 >= delta sync badstate do {} goto conflict;
		when timer_switch_switch_1 < delta sync switch_switch_1_automata_delay_18_2_sync_0 goto mode3;
		when timer_switch_switch_1 < delta sync switch_switch_1_GarageDoorOpener0_0 goto mode3;
		when timer_switch_switch_1 < delta sync switch_switch_Evt_1 goto mode3;

	urgent loc mode3: invariant True
		when switch_switch_1 = 97  do {} goto mode2;
		when switch_switch_1 < 97  do {} goto mode0;
		when switch_switch_1 > 97  do {} goto mode0;

	loc conflict: invariant True

	end


init := {
	discrete =
		loc[app_Env] := mode0,
		loc[switch_switch_Dev_1] := mode0,
		loc[GarageDoorOpener0] := mode0,
		loc[automata_delay_18_2_sync] := mode0,
		loc[switch_on_deadline_switch] := mode0,
		loc[GarageDoorOpener1] := mode0
	;

	continuous =
		& app = 0
		& delay = 3
		& delta = 5
		& switch_switch_1 = 0
		& trigger_GarageDoorOpener = 0

		& timer_switch_switch_1 = 0
		& switch_switch_1_sensor_clk = 0
		& clock_GarageDoorOpener_0 = 0
	;
}

end
